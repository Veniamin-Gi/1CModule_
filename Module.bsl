

#Область ПроверкаПеременной

Функция ЭтоNull(Значение)
	Возврат Значение = Null;	
КонецФункции

Функция ЭтоМассив(Значение)
	Возврат (ТипЗнч(Значение) = Тип("Массив"));		
КонецФункции 

Функция ЭтоСтруктура(Значение)
	Возврат (ТипЗнч(Значение) = Тип("Структура"));		
КонецФункции

Функция ЭтоСоответствие(Значение)
	Возврат (ТипЗнч(Значение) = Тип("Соответствие"));		
КонецФункции  

Функция ЭтоТаблицаЗначений(Значение)
	Возврат (ТипЗнч(Значение) = Тип("ТаблицаЗначений"));		
КонецФункции 

Функция ЗначениеНеопределенно(Значение)
	Возврат (Значение = Неопределено);
КонецФункции

Функция ЭтоПустаяКоллекция(Значение)
	Возврат  (Значение.Количество() = 0);	
КонецФункции

Функция ЗначениеНеЗаполнено(Значение)
	Возврат (ЗначениеЗаполнено(Значение) = Ложь);
КонецФункции

#КонецОбласти


#Область Обработка_httpСервисов

#Область ПроверкаHTTPЗапроса

Функция Попытка_ПолучитьДанныеHTTPЗапроса(Запрос) Экспорт 
	
	Попытка		
		
		ЧтениеJSON = Новый ЧтениеJSON();	
		ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		
	Исключение
		Возврат Неопределено;
	КонецПопытки;

	Возврат Данные;
 
 КонецФункции 
 
 Функция ТипДанныхЗапросаСоотвествуютКоллекции(Данные, Коллекции) Экспорт
  	Возврат ТипЗначенияСодержитсяВКоллекции(ТипЗнч(Данные), Коллекции); 	
 КонецФункции 
 
 
 #КонецОбласти
 
 #Область ФормированияHTTPОтветов

Функция СформироватьHTTPОтветДанных(данные, кодОтвета = 200) Экспорт
	
	записьJSON = Новый ЗаписьJSON;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	
	записьJSON.УстановитьСтроку(ПараметрыJSON);

	ЗаписатьJSON(записьJSON, данные);
	строкаJS = записьJSON.Закрыть();
		
	ответ = Новый HTTPСервисОтвет(кодОтвета);
	ответ.УстановитьТелоИзСтроки(строкаJS);
	ответ.Заголовки.Вставить("Content-type", "application/json; charset=utf-8");
	
	Возврат ответ;
		
КонецФункции

Функция СформироватьHTTPОтветСТекстом(строкаСообщения, кодОтвета = 200) Экспорт 
	
	структураОтвета = Новый Структура;
	структураОтвета.Вставить("Message", строкаСообщения);
	
	ответ = СформироватьHTTPОтветДанных(структураОтвета, кодОтвета);
	
	Возврат ответ;	
	
КонецФункции

Функция СформироватьHTTPОтвет_Неуспешный(текстОшибки)
	
	СтруктураДанныхJSON = Новый Структура("Message",	текстОшибки);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	параметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, " ", Истина);  
	ЗаписьJSON.УстановитьСтроку(параметрыJSON); 
	
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанныхJSON);
	СтрокаJS = ЗаписьJSON.Закрыть();
	
	ответ = Новый HTTPСервисОтвет(500);
	ответ.УстановитьТелоИзСтроки(СтрокаJS);
	ответ.Заголовки.Вставить("Content-type", "application/json; charset=utf-8");
	
	Возврат ответ;

КонецФункции


 #КонецОбласти
 
  #Область httpJSON
 
 Процедура ЗначенияСтруктурыКJSONФормату(Структура)
	
	Для каждого Элемент Из Структура Цикл
		
		Если ЗначениеНеЗаполнено(Структура[Элемент.Ключ]) Тогда
			Структура[Элемент.Ключ] = "";	
		КонецЕсли;
		
		// БСП 
		Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Структура[Элемент.Ключ])) Тогда
			Структура[Элемент.Ключ] = Строка(Структура[Элемент.Ключ]);	           
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

 
 #КонецОбласти
 
 #КонецОбласти  
 
 
 #Область РаботаСоСторками
 
 Функция СоздатьИлиДополнитьТекст(ОсновнойТекст = "", ДополнительныйТекст)
	
	Если ПустаяСтрока(ДополнительныйТекст) Тогда
		Возврат ОсновнойТекст;
	КонецЕсли;
	
	новаяСтрока = "" + ОсновнойТекст + ", " + ДополнительныйТекст; 
	Возврат ?(ПустаяСтрока(ОсновнойТекст), ДополнительныйТекст, новаяСтрока);
	
КонецФункции 

 
 #КонецОбласти
 
 
 #Область Общие
 
 Функция ТипЗначенияСодержитсяВКоллекции(ТипЗначения, Коллекции) 

 	Для каждого коллекция Из Коллекции  Цикл
		
		Если ЗначенияРавны(ТипЗначения, Тип(коллекция)) Тогда
			Возврат Истина;
		КонецЕсли
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
 
 Функция ЗначенияРавны(Значение1, Значение2)
	Возврат (Значение1 = Значение2); 	 
КонецФункции

 Функция ЗначенияНеРавны(Значение1, Значение2)
	Возврат (Значение1 <> Значение2); 	 
КонецФункции

 
 
 #КонецОбласти
 